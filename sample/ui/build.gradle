plugins {
    alias(libs.plugins.starter.library.android)
    alias(libs.plugins.app.cash.licensee)
    id("io.github.usefulness.licensee-for-android")
    alias(libs.plugins.kotlin.compose.compiler)
}

licensee {
    allow("Apache-2.0")
}

licenseeForAndroid {
    enableKotlinCodeGeneration = true
    generatedPackageName = "example.generated.from.android.library"
    enableResourceGeneration = true
    resourceFileName = "ui_library_asset.json"
}

android {
    namespace = "io.githhub.usefulness.licensee.android.ui"

    buildFeatures {
        compose = true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

dependencies {
    api("io.github.usefulness:licensee-for-android-core")
    api(project(":serialization"))
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.compose.runtime)
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.foundation.foundation.layout)
    implementation(libs.androidx.compose.material3)
    implementation(libs.androidx.compose.foundation)
    implementation(libs.androidx.compose.animation)
    implementation(libs.androidx.compose.ui.ui.tooling)
    implementation(libs.androidx.compose.runtime.runtime.livedata)
    implementation(libs.androidx.compose.ui.ui.text)
    implementation(libs.androidx.compose.material.material.icons.extended)
    implementation(libs.androidx.core.core.ktx)

    testRuntimeOnly(libs.junit.platform.launcher)
    testRuntimeOnly(libs.junit.vintage.engine)

    testImplementation(libs.junit4)
    testImplementation(libs.assertj.core)
    testImplementation(libs.androidx.test.core)
    testImplementation(libs.org.robolectric.core)
    testImplementation(libs.kotlinx.serialization.json.okio)

    ktlintRuleSet(libs.io.nlopez.compose)
}
